/*
    Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import gsap from 'gsap';
import { useGSAP } from '@gsap/react';
import { useRef, useState } from 'react';
import { Float, useGLTF } from '@react-three/drei';

const JavascriptLogo = ({ ...props }) => {
  const { nodes, materials } = useGLTF('models/javascript.glb');

  const logoRef = useRef();
  const [hovered, setHovered] = useState(false);

  useGSAP(() => {
    gsap
      .timeline({
        repeat: -1,
        repeatDelay: 0.5,
      })
      .to(logoRef.current.rotation, {
        y: hovered ? '+=2' : `+=${Math.PI * 2}`,
        x: hovered ? '+=2' : `-=${Math.PI * 2}`,
        duration: 2.5,
        stagger: {
          each: 0.15,
        },
      });
  });

  return (
    <Float floatIntensity={2}>
      <group position={[5, -5, 0]} scale={1} dispose={null} {...props}>
        {/* Adjusted position to move it downward and to the right */}
        <mesh
          ref={logoRef}
          castShadow
          receiveShadow
          geometry={nodes.Object_22.geometry} // Replace 'Object_22' with your actual node name
          material={materials.JAVASCRIPT} // Replace 'JAVASCRIPT' with your actual material name
          onPointerEnter={() => setHovered(true)}
          onPointerLeave={() => setHovered(false)}
        />
      </group>
    </Float>
  );
};

useGLTF.preload('models/javascript.glb');

export default JavascriptLogo;
